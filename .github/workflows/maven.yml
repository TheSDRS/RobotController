# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'oracle'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file RobotControlnterface/pom.xml

    - name: Run Tests
      run: mvn -B test --file RobotControlnterface/pom.xml

    - name: Update README with Test Status
      if: always()
      run: |
        TEST_STATUS=$(if [ "${{ job.status }}" == "success" ]; then echo "passing"; else echo "failing"; fi)
        TEST_COLOR=$(if [ "${{ job.status }}" == "success" ]; then echo "brightgreen"; else echo "red"; fi)
        sed -i 's|![Test Status](.*)|![Test Status](https://img.shields.io/badge/tests-'${TEST_STATUS}'-'${TEST_COLOR}')|' README.md
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add README.md
        git commit -m "Update test status badge"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
